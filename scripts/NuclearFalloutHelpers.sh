#!/bin/sh
# Eric McCann (Nuclearmistake) 2014

export OUTFD=$(ps | grep -v "grep" | grep -o -E "update_binary(.*)" | cut -d " " -f 3); #BIG props to Chainfire
[ ! $OUTFD ] && export OUTFD=$(ps | grep -v "grep" | grep -o -E "/tmp/updater(.*)" | cut -d " " -f 3); #BIG props nuclearmistake for TWRP-izing
ui_print() { if [ $OUTFD ]; then echo "ui_print $*" 1>&$OUTFD; fi; return 0; }

if [ $VERBOSE ]; then
export RESTORE=noisy_restore_file
export BACKUP=noisy_backup_file
else
export RESTORE=restore_file
export BACKUP=backup_file
fi

copy_files() {
  # $1 = temp directory containing files to copy to destination
  # $2 = destination folder
  currdir=$(pwd)
  cd $1
  find . -type d | while read FOLDER; do
    RELATIVE=$(echo $FOLDER | /sbin/busybox sed 's/^\.\///g')
    [ `echo $RELATIVE | wc -c` -gt 0 ] && mkdir -p $2/$RELATIVE
  done
  find . -type f | while read FILE; do
    RELATIVE=$(echo $FILE | /sbin/busybox sed 's/^\.\///g')
    cp $FILE $2/$RELATIVE
    # STRING COMPARE FTW... add files copied to /system to the CM backuptool script
    [ "$2" = "/system" ] && echo $RELATIVE
  done
  cd $currdir
  rm -Rf $1  > /dev/null
}

generate_gapps_script() {
mkdir -p /system/addon.d
cat <<NUKE
#!/sbin/sh
#
# /system/addon.d/70-gapps.sh
# Automatically generated by Nuclearmistake's NuclearFallout gapps install script
#
export OUTFD=\$(ps | grep -v "grep" | grep -o -E "update_binary(.*)" | cut -d " " -f 3); \#BIG props to Chainfire
[ ! \$OUTFD ] && export OUTFD=\$(ps | grep -v "grep" | grep -o -E "/tmp/updater(.*)" | cut -d " " -f 3); \#BIG props nuclearmistake for TWRP-izing
ui_print() { if [ \$OUTFD ]; then echo "ui_print \$*" 1>&\$OUTFD; fi; return 0; }

. /tmp/backuptool.functions

noisy_restore_file() { ui_print "restore: \$*"; restore_file \$*; }
noisy_backup_file() { ui_print "backup: \$*"; backup_file \$*; }

list_files() {
cat <<EOF
$(copy_files /tmp/system /system)
EOF
}

case "\$1" in
  backup)
    list_files | while read FILE DUMMY; do
      $BACKUP \$S/\$FILE
    done
  ;;
  restore)
    list_files | while read FILE REPLACEMENT; do
      R=""
      [ -n "$\REPLACEMENT" ] && R="\$S/\$REPLACEMENT"
      [ -f "\$C/\$S/\$FILE" ] && $RESTORE \$S/\$FILE \$R
    done
  ;;
  pre-backup)
    # Stub
  ;;
  post-backup)
    # Stub
  ;;
  pre-restore)
    # Stub
  ;;
  post-restore)
    # Stub
;;
esac
NUKE
}
